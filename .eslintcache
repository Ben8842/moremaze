[{"C:\\Users\\DDLACourse\\newprojects\\construction\\src\\index.js":"1","C:\\Users\\DDLACourse\\newprojects\\construction\\src\\App.js":"2","C:\\Users\\DDLACourse\\newprojects\\construction\\src\\reportWebVitals.js":"3","C:\\Users\\DDLACourse\\newprojects\\maze\\construction\\src\\index.js":"4","C:\\Users\\DDLACourse\\newprojects\\maze\\construction\\src\\App.js":"5","C:\\Users\\DDLACourse\\newprojects\\maze\\construction\\src\\reportWebVitals.js":"6","C:\\Users\\DDLACourse\\newprojects\\superMaze\\mazebuilder\\src\\index.js":"7","C:\\Users\\DDLACourse\\newprojects\\superMaze\\mazebuilder\\src\\App.js":"8","C:\\Users\\DDLACourse\\newprojects\\superMaze\\mazebuilder\\src\\reportWebVitals.js":"9"},{"size":500,"mtime":1606164290268,"results":"10","hashOfConfig":"11"},{"size":2097,"mtime":1612736694160,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1606164290268,"results":"13","hashOfConfig":"11"},{"size":517,"mtime":1612751148458,"results":"14","hashOfConfig":"15"},{"size":15630,"mtime":1613242038819,"results":"16","hashOfConfig":"15"},{"size":375,"mtime":1612751148479,"results":"17","hashOfConfig":"15"},{"size":517,"mtime":1613276255308,"results":"18","hashOfConfig":"19"},{"size":30319,"mtime":1613881661879,"results":"20","hashOfConfig":"19"},{"size":375,"mtime":1613276255310,"results":"21","hashOfConfig":"19"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"12hxqeq",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"8mo7o0",{"filePath":"32","messages":"33","errorCount":0,"warningCount":67,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"qdf30k",{"filePath":"40","messages":"41","errorCount":0,"warningCount":113,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"39"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"C:\\Users\\DDLACourse\\newprojects\\construction\\src\\index.js",[],["45","46"],"C:\\Users\\DDLACourse\\newprojects\\construction\\src\\App.js",["47"],"C:\\Users\\DDLACourse\\newprojects\\construction\\src\\reportWebVitals.js",[],"C:\\Users\\DDLACourse\\newprojects\\maze\\construction\\src\\index.js",[],["48","49"],"C:\\Users\\DDLACourse\\newprojects\\maze\\construction\\src\\App.js",["50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116"],"import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\n\r\nclass Building extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    var superpath = [];\r\n    this.state = {\r\n      pathO: [[0, 0]],\r\n      stepback: 3,\r\n      complete: false,\r\n    };\r\n  }\r\n\r\n  renderSquare(x, y) {\r\n    var { pathO, stepback } = this.state;\r\n    const viewSize = this.props.sizeValue;\r\n    function shuffle(arry) {\r\n      arry.sort(() => Math.random() - 0.5);\r\n    }\r\n    function randomNumber(min, max) {\r\n      return Math.floor(Math.random() * (max - min)) + min;\r\n    }\r\n    var z = randomNumber(1, 15);\r\n\r\n    var bid = \"b1\";\r\n    var bad = \"bplus\";\r\n\r\n    var i = null;\r\n    for (i = 0; i < pathO.length; i++) {\r\n      if (x == 0 && y == 0) {\r\n        return <button class=\"green\" codeX={x} codeY={y}></button>;\r\n      } else if (x == viewSize - 2 && y == viewSize - 2) {\r\n        return <button class=\"green\" codeX={x} codeY={y}></button>;\r\n      } else if (\r\n        x == pathO[pathO.length - 1][0] &&\r\n        y == pathO[pathO.length - 1][1]\r\n      ) {\r\n        return <button class=\"blue\" codeX={x} codeY={y}></button>;\r\n      } else if (\r\n        x ==\r\n          pathO[pathO.length - stepback < 0 ? 0 : pathO.length - stepback][0] &&\r\n        y == pathO[pathO.length - stepback < 0 ? 0 : pathO.length - stepback][1]\r\n      ) {\r\n        return <button class=\"orange\" codeX={x} codeY={y}></button>;\r\n      } else if (x == pathO[i][0] && y == pathO[i][1]) {\r\n        return <button class={bad} codeX={x} codeY={y}></button>;\r\n      }\r\n    }\r\n    return <button class={bid} codeX={x} codeY={y}></button>;\r\n  }\r\n\r\n  morePathFinders() {\r\n    var { pathO, stepback } = this.state;\r\n    const viewSize = this.props.sizeValue;\r\n    const sizeLimit = viewSize - 2;\r\n    var exwy = pathO;\r\n\r\n    function randomNumber(min, max) {\r\n      return Math.floor(Math.random() * (max - min)) + min;\r\n    }\r\n\r\n    var zcounter = stepback;\r\n    function pastAbsDirection(x1, x2, y1, y2) {\r\n      if (x1 == x2 && y1 > y2) {\r\n        return 1;\r\n        //up\r\n      } else if (x1 == x2 && y1 < y2) {\r\n        return 2;\r\n        //down\r\n      } else if (x1 > x2 && y1 == y2) {\r\n        return 3;\r\n        //left\r\n      } else if (x1 < x2 && y1 == y2) {\r\n        return 4;\r\n        //right\r\n      }\r\n    }\r\n\r\n    var potentialMove = [\r\n      [exwy[exwy.length - zcounter][0] + 2, exwy[exwy.length - zcounter][1]],\r\n      [exwy[exwy.length - zcounter][0] - 2, exwy[exwy.length - zcounter][1]],\r\n      [exwy[exwy.length - zcounter][0], exwy[exwy.length - zcounter][1] + 2],\r\n      [exwy[exwy.length - zcounter][0], exwy[exwy.length - zcounter][1] - 2],\r\n    ];\r\n\r\n    //these flags below mark whether the potential move exists in move array\r\n    var one = null;\r\n    var two = null;\r\n    var three = null;\r\n    var four = null;\r\n    //these below mark whether the potential move is on the board\r\n    var oneBoard = null;\r\n    var twoBoard = null;\r\n    var threeBoard = null;\r\n    var fourBoard = null;\r\n    var u = 0;\r\n    var i = 0;\r\n    var p = 0;\r\n    var k = 0;\r\n\r\n    for (u = 0; u < exwy.length; u++) {\r\n      if (\r\n        exwy[u][0] == potentialMove[0][0] &&\r\n        exwy[u][1] == potentialMove[0][1]\r\n      ) {\r\n        one = true;\r\n        break;\r\n      } else one = false;\r\n    }\r\n    for (i = 0; i < exwy.length; i++) {\r\n      if (\r\n        exwy[i][0] == potentialMove[1][0] &&\r\n        exwy[i][1] == potentialMove[1][1]\r\n      ) {\r\n        two = true;\r\n        break;\r\n      } else two = false;\r\n    }\r\n    for (p = 0; p < exwy.length; p++) {\r\n      if (\r\n        exwy[p][0] == potentialMove[2][0] &&\r\n        exwy[p][1] == potentialMove[2][1]\r\n      ) {\r\n        three = true;\r\n        break;\r\n      } else three = false;\r\n    }\r\n    for (k = 0; k < exwy.length; k++) {\r\n      if (\r\n        exwy[k][0] == potentialMove[3][0] &&\r\n        exwy[k][1] == potentialMove[3][1]\r\n      ) {\r\n        four = true;\r\n        break;\r\n      } else four = false;\r\n    }\r\n\r\n    if (\r\n      0 <= potentialMove[0][0] &&\r\n      potentialMove[0][0] <= sizeLimit &&\r\n      0 <= potentialMove[0][1] &&\r\n      potentialMove[0][1] <= sizeLimit\r\n    ) {\r\n      oneBoard = false;\r\n    } else oneBoard = true;\r\n\r\n    if (\r\n      0 <= potentialMove[1][0] &&\r\n      potentialMove[1][0] <= sizeLimit &&\r\n      0 <= potentialMove[1][1] &&\r\n      potentialMove[1][1] <= sizeLimit\r\n    ) {\r\n      twoBoard = false;\r\n    } else twoBoard = true;\r\n\r\n    if (\r\n      0 <= potentialMove[2][0] &&\r\n      potentialMove[2][0] <= sizeLimit &&\r\n      0 <= potentialMove[2][1] &&\r\n      potentialMove[2][1] <= sizeLimit\r\n    ) {\r\n      threeBoard = false;\r\n    } else threeBoard = true;\r\n\r\n    if (\r\n      0 <= potentialMove[3][0] &&\r\n      potentialMove[3][0] <= sizeLimit &&\r\n      0 <= potentialMove[3][1] &&\r\n      potentialMove[3][1] <= sizeLimit\r\n    ) {\r\n      fourBoard = false;\r\n    } else fourBoard = true;\r\n\r\n    var actualPotentialMoves = [];\r\n    if (one == false && oneBoard == false) {\r\n      actualPotentialMoves.push(potentialMove[0]);\r\n    }\r\n    if (two == false && twoBoard == false) {\r\n      actualPotentialMoves.push(potentialMove[1]);\r\n    }\r\n    if (three == false && threeBoard == false) {\r\n      actualPotentialMoves.push(potentialMove[2]);\r\n    }\r\n    if (four == false && fourBoard == false) {\r\n      actualPotentialMoves.push(potentialMove[3]);\r\n    }\r\n    //array of valid potential moves (unvisited and on the board) is logged below\r\n    //console.log(\"the actual Potential VALID moves are: \");\r\n    //console.log(actualPotentialMoves);\r\n\r\n    if (actualPotentialMoves.length == 0) {\r\n      //if length is zero here, then you know there is a 'dead end' in the maze\r\n    } else if (pathO.length !== 1) {\r\n      var chooserNext = randomNumber(1, actualPotentialMoves.length + 1);\r\n\r\n      //execution and use of a function that determines the direction of the last move\r\n      var newDir = pastAbsDirection(\r\n        exwy[exwy.length - zcounter][0],\r\n        actualPotentialMoves[chooserNext - 1][0],\r\n        exwy[exwy.length - zcounter][1],\r\n        actualPotentialMoves[chooserNext - 1][1]\r\n      );\r\n\r\n      //determine the new coordinates based on the direction (coded 1-4)\r\n\r\n      if (newDir == 3) {\r\n        exwy.push(\r\n          [\r\n            actualPotentialMoves[chooserNext - 1][0] + 1,\r\n            actualPotentialMoves[chooserNext - 1][1],\r\n          ],\r\n          actualPotentialMoves[chooserNext - 1]\r\n        );\r\n      } else if (newDir == 4) {\r\n        exwy.push(\r\n          [\r\n            actualPotentialMoves[chooserNext - 1][0] - 1,\r\n            actualPotentialMoves[chooserNext - 1][1],\r\n          ],\r\n          actualPotentialMoves[chooserNext - 1]\r\n        );\r\n      } else if (newDir == 1) {\r\n        exwy.push(\r\n          [\r\n            actualPotentialMoves[chooserNext - 1][0],\r\n            actualPotentialMoves[chooserNext - 1][1] + 1,\r\n          ],\r\n          actualPotentialMoves[chooserNext - 1]\r\n        );\r\n      } else if (newDir == 2) {\r\n        exwy.push(\r\n          [\r\n            actualPotentialMoves[chooserNext - 1][0],\r\n            actualPotentialMoves[chooserNext - 1][1] - 1,\r\n          ],\r\n          actualPotentialMoves[chooserNext - 1]\r\n        );\r\n      }\r\n    }\r\n    if (stepback < pathO.length) {\r\n      this.setState((state) => {\r\n        return { pathO: exwy, stepback: state.stepback + 2 };\r\n      });\r\n    } else {\r\n      //if the stepback becomes larger than the length of the 'move' array pathO\r\n      //then we know the maze is complete and we can end the interval\r\n      clearInterval(this.state.interval);\r\n    }\r\n\r\n    this.forceUpdate();\r\n  }\r\n\r\n  pathgeneratorOrigin() {\r\n    var interval = setInterval(this.pathgenerator.bind(this), 25);\r\n    this.setState({ interval: interval });\r\n  }\r\n\r\n  pathgenerator() {\r\n    var { pathO } = this.state;\r\n    const viewSize = this.props.sizeValue;\r\n    const sizeLimit = viewSize - 2;\r\n    var exwy = pathO;\r\n\r\n    function randomNumber(min, max) {\r\n      return Math.floor(Math.random() * (max - min)) + min;\r\n    }\r\n\r\n    if (pathO.length == 1) {\r\n      var chooser = randomNumber(1, 3);\r\n\r\n      if (chooser == 1) {\r\n        exwy.push([1, 0], [2, 0]);\r\n      } else if (chooser == 2) {\r\n        exwy.push([0, 1], [0, 2]);\r\n      }\r\n    } else {\r\n      function pastDirection(x1, x2, y1, y2) {\r\n        if (x1 == x2 && y1 > y2) {\r\n          return 1;\r\n          //up\r\n        } else if (x1 == x2 && y1 < y2) {\r\n          return 2;\r\n          //down\r\n        } else if (x1 > x2 && y1 == y2) {\r\n          return 3;\r\n          //left\r\n        } else if (x1 < x2 && y1 == y2) {\r\n          return 4;\r\n          //right\r\n        }\r\n      }\r\n\r\n      var potentialMove = [\r\n        [exwy[exwy.length - 1][0] + 2, exwy[exwy.length - 1][1]],\r\n        [exwy[exwy.length - 1][0] - 2, exwy[exwy.length - 1][1]],\r\n        [exwy[exwy.length - 1][0], exwy[exwy.length - 1][1] + 2],\r\n        [exwy[exwy.length - 1][0], exwy[exwy.length - 1][1] - 2],\r\n      ];\r\n\r\n      //these flags below mark whether the potential move exists in move array\r\n      var one = null;\r\n      var two = null;\r\n      var three = null;\r\n      var four = null;\r\n      //these flags below mark whether the potential move is on the board or off the board\r\n      var oneBoard = null;\r\n      var twoBoard = null;\r\n      var threeBoard = null;\r\n      var fourBoard = null;\r\n      var u = 0;\r\n      var i = 0;\r\n      var p = 0;\r\n      var k = 0;\r\n      for (u = 0; u < exwy.length; u++) {\r\n        if (\r\n          exwy[u][0] == potentialMove[0][0] &&\r\n          exwy[u][1] == potentialMove[0][1]\r\n        ) {\r\n          one = true;\r\n          break;\r\n        } else one = false;\r\n      }\r\n      for (i = 0; i < exwy.length; i++) {\r\n        if (\r\n          exwy[i][0] == potentialMove[1][0] &&\r\n          exwy[i][1] == potentialMove[1][1]\r\n        ) {\r\n          two = true;\r\n          break;\r\n        } else two = false;\r\n      }\r\n      for (p = 0; p < exwy.length; p++) {\r\n        if (\r\n          exwy[p][0] == potentialMove[2][0] &&\r\n          exwy[p][1] == potentialMove[2][1]\r\n        ) {\r\n          three = true;\r\n          break;\r\n        } else three = false;\r\n      }\r\n      for (k = 0; k < exwy.length; k++) {\r\n        if (\r\n          exwy[k][0] == potentialMove[3][0] &&\r\n          exwy[k][1] == potentialMove[3][1]\r\n        ) {\r\n          four = true;\r\n          break;\r\n        } else four = false;\r\n      }\r\n\r\n      if (\r\n        0 <= potentialMove[0][0] &&\r\n        potentialMove[0][0] <= sizeLimit &&\r\n        0 <= potentialMove[0][1] &&\r\n        potentialMove[0][1] <= sizeLimit\r\n      ) {\r\n        oneBoard = false;\r\n      } else oneBoard = true;\r\n\r\n      if (\r\n        0 <= potentialMove[1][0] &&\r\n        potentialMove[1][0] <= sizeLimit &&\r\n        0 <= potentialMove[1][1] &&\r\n        potentialMove[1][1] <= sizeLimit\r\n      ) {\r\n        twoBoard = false;\r\n      } else twoBoard = true;\r\n\r\n      if (\r\n        0 <= potentialMove[2][0] &&\r\n        potentialMove[2][0] <= sizeLimit &&\r\n        0 <= potentialMove[2][1] &&\r\n        potentialMove[2][1] <= sizeLimit\r\n      ) {\r\n        threeBoard = false;\r\n      } else threeBoard = true;\r\n\r\n      if (\r\n        0 <= potentialMove[3][0] &&\r\n        potentialMove[3][0] <= sizeLimit &&\r\n        0 <= potentialMove[3][1] &&\r\n        potentialMove[3][1] <= sizeLimit\r\n      ) {\r\n        fourBoard = false;\r\n      } else fourBoard = true;\r\n\r\n      var actualPotentialMoves = [];\r\n      if (one == false && oneBoard == false) {\r\n        actualPotentialMoves.push(potentialMove[0]);\r\n      }\r\n      if (two == false && twoBoard == false) {\r\n        actualPotentialMoves.push(potentialMove[1]);\r\n      }\r\n      if (three == false && threeBoard == false) {\r\n        actualPotentialMoves.push(potentialMove[2]);\r\n      }\r\n      if (four == false && fourBoard == false) {\r\n        actualPotentialMoves.push(potentialMove[3]);\r\n      }\r\n      //array of valid potential moves (unvisited and on the board) is logged below\r\n\r\n      if (actualPotentialMoves.length == 0) {\r\n        this.morePathFinders();\r\n      } else if (pathO.length !== 1) {\r\n        this.state.stepback = 3;\r\n\r\n        var chooserNext = randomNumber(1, actualPotentialMoves.length + 1);\r\n\r\n        var newDir = pastDirection(\r\n          exwy[exwy.length - 1][0],\r\n          actualPotentialMoves[chooserNext - 1][0],\r\n          exwy[exwy.length - 1][1],\r\n          actualPotentialMoves[chooserNext - 1][1]\r\n        );\r\n\r\n        if (newDir == 3) {\r\n          exwy.push(\r\n            [\r\n              actualPotentialMoves[chooserNext - 1][0] + 1,\r\n              actualPotentialMoves[chooserNext - 1][1],\r\n            ],\r\n            actualPotentialMoves[chooserNext - 1]\r\n          );\r\n        } else if (newDir == 4) {\r\n          exwy.push(\r\n            [\r\n              actualPotentialMoves[chooserNext - 1][0] - 1,\r\n              actualPotentialMoves[chooserNext - 1][1],\r\n            ],\r\n            actualPotentialMoves[chooserNext - 1]\r\n          );\r\n        } else if (newDir == 1) {\r\n          exwy.push(\r\n            [\r\n              actualPotentialMoves[chooserNext - 1][0],\r\n              actualPotentialMoves[chooserNext - 1][1] + 1,\r\n            ],\r\n            actualPotentialMoves[chooserNext - 1]\r\n          );\r\n        } else if (newDir == 2) {\r\n          exwy.push(\r\n            [\r\n              actualPotentialMoves[chooserNext - 1][0],\r\n              actualPotentialMoves[chooserNext - 1][1] - 1,\r\n            ],\r\n            actualPotentialMoves[chooserNext - 1]\r\n          );\r\n        }\r\n      }\r\n    }\r\n\r\n    this.setState((state) => {\r\n      return { pathO: exwy };\r\n    });\r\n    this.forceUpdate();\r\n  }\r\n\r\n  render() {\r\n    const elementS = [];\r\n    const elementZ = [];\r\n    const viewSize = this.props.sizeValue;\r\n    //const sizeLimit = viewSize - 2;\r\n\r\n    var x;\r\n    var y;\r\n    for (y = 0; y < viewSize; y++) {\r\n      for (x = 0; x < viewSize; x++) {\r\n        elementS.push(<o>{this.renderSquare(x, y)}</o>);\r\n      }\r\n      elementZ.push(\r\n        <div className=\"newLine\">\r\n          {elementS.map((value, index) => {\r\n            return <span key={index}>{value}</span>;\r\n          })}\r\n        </div>\r\n      );\r\n      for (x = 0; x < viewSize; x++) {\r\n        elementS.pop();\r\n      }\r\n    }\r\n    return (\r\n      <div className=\"entireThing\">\r\n        <button id=\"largebutton\" onClick={() => this.pathgeneratorOrigin()}>\r\n          Click to Start\r\n        </button>\r\n\r\n        <div>\r\n          {elementZ.map((value, index) => {\r\n            return <span key={index}>{value}</span>;\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      count: 20,\r\n    };\r\n  }\r\n  enterCount() {\r\n    var zvalue = document.getElementById(\"sizeHere\").value;\r\n\r\n    this.setState((state) => {\r\n      return { count: zvalue };\r\n    });\r\n  }\r\n\r\n  render() {\r\n    var { count } = this.state;\r\n\r\n    const inputBox = (\r\n      <div>\r\n        <form>\r\n          <input class=\"largebutton\" type=\"number\" id=\"sizeHere\"></input>\r\n          <button\r\n            type=\"button\"\r\n            class=\"largebutton\"\r\n            onClick={() => this.enterCount()}\r\n          >\r\n            ENTER\r\n          </button>\r\n          10 PRINT CHR$ (205.5 + RND (1)); : GOTO 10\r\n        </form>\r\n      </div>\r\n    );\r\n    return (\r\n      <div>\r\n        <div className=\"HeaderSpot\">{inputBox}</div>\r\n        <div class=\"slider\">\r\n          <p class=\"slider\"> Default range slider:</p>\r\n          <input class=\"slider\" type=\"range\" min=\"20\" max=\"3000\"></input>\r\n        </div>\r\n        <Building sizeValue={count} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\DDLACourse\\newprojects\\maze\\construction\\src\\reportWebVitals.js",[],"C:\\Users\\DDLACourse\\newprojects\\superMaze\\mazebuilder\\src\\index.js",[],["117","118"],"C:\\Users\\DDLACourse\\newprojects\\superMaze\\mazebuilder\\src\\App.js",["119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231"],"/* logic summary:\r\n\r\n************************************************************************************************\r\n\r\n1.  given the current X, Y value, calculate the 4 potential moves (up, down, left, and right)\r\n\r\n2. Now investigate these 4 moves and determine two things on each.  \r\n\t\ta.  Has the move been visited before?  true/false\r\n\t\tb.  Is this move located on the board?  true/false\r\n\r\n         If a. is false AND b. is true, then mark this move as a VALID potential move.\r\n\t\t\t\talso add this to the VALID potential move array. \r\n \r\n\t\t\tIf a. is true OR b. is false, then this move is invalid. \r\n\r\n3.  If the length of the VALID potential move array is NOT zero, choose \r\na random VALID potential move, move to it (determine the previous path direction and add\r\nthe appropriate coordinates to connect the path), and record this in the move array.\r\n\r\n4.  If the length of the VALID potential move array IS zero, this means you found a dead end.  \r\nIncrease the step back value 2 points, and repeat steps 1, 2, 3, 4, but step 2 steps back in the \r\nmove array and use that 'stepback' value as the spot for 'current' x y values.  \r\n\r\n5. End the algorithm once all spots have been checked.  \r\n\r\n\r\n************************************************************************************************\r\n*/\r\nimport React, { Component } from \"react\";\r\nimport \"./App.css\";\r\n\r\nvar firstimg = require(\"./imgfolder/nestedForLoops.png\").default;\r\nvar secondimg = require(\"./imgfolder/pastDirection.png\").default;\r\nvar thirdimg = require(\"./imgfolder/potentialmove.png\").default;\r\nvar fourthimg = require(\"./imgfolder/structure.png\").default;\r\n//import keydown from \"react-keydown\";\r\n\r\n//const KEYS = [37, 38, 39, 40];\r\n\r\nclass Building extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      pathO: [[0, 0]],\r\n      stepback: 3,\r\n      complete: false,\r\n      icon: [0, 0],\r\n      stepz: 0,\r\n      controltime: false,\r\n    };\r\n  }\r\n\r\n  renderSquare(x, y) {\r\n    var { pathO, stepback, icon } = this.state;\r\n    const viewSize = this.props.sizeValue;\r\n\r\n    function randomNumber(min, max) {\r\n      return Math.floor(Math.random() * (max - min)) + min;\r\n    }\r\n\r\n    var bid = \"b1\";\r\n    var bad = \"bplus\";\r\n\r\n    var i = null;\r\n    for (i = 0; i < pathO.length; i++) {\r\n      if (stepback == pathO.length && x == icon[0] && y == icon[1]) {\r\n        return <button class=\"icon\" codeX={x} codeY={y}></button>;\r\n      } else if (x == 0 && y == 0) {\r\n        return <button class=\"green\" codeX={x} codeY={y}></button>;\r\n      } else if (x == viewSize - 2 && y == viewSize - 2) {\r\n        return <button class=\"green\" codeX={x} codeY={y}></button>;\r\n      } else if (\r\n        x == pathO[pathO.length - 1][0] &&\r\n        y == pathO[pathO.length - 1][1] &&\r\n        stepback < pathO.length\r\n      ) {\r\n        return <button class=\"blue\" codeX={x} codeY={y}></button>;\r\n      } else if (\r\n        x ==\r\n          pathO[pathO.length - stepback < 0 ? 0 : pathO.length - stepback][0] &&\r\n        y == pathO[pathO.length - stepback < 0 ? 0 : pathO.length - stepback][1]\r\n      ) {\r\n        return <button class=\"orange\" codeX={x} codeY={y}></button>;\r\n      } else if (\r\n        x ==\r\n          pathO[\r\n            pathO.length - stepback - 1 < 0 ? 0 : pathO.length - 1 - stepback\r\n          ][0] &&\r\n        y ==\r\n          pathO[\r\n            pathO.length - stepback - 1 < 0 ? 0 : pathO.length - 1 - stepback\r\n          ][1]\r\n      ) {\r\n        return <button class=\"orange2\" codeX={x} codeY={y}></button>;\r\n      } else if (\r\n        x ==\r\n          pathO[\r\n            pathO.length - stepback - 2 < 0 ? 0 : pathO.length - 2 - stepback\r\n          ][0] &&\r\n        y ==\r\n          pathO[\r\n            pathO.length - stepback - 2 < 0 ? 0 : pathO.length - 2 - stepback\r\n          ][1]\r\n      ) {\r\n        return <button class=\"orange3\" codeX={x} codeY={y}></button>;\r\n      } else if (\r\n        x ==\r\n          pathO[\r\n            pathO.length - stepback - 3 < 0 ? 0 : pathO.length - 3 - stepback\r\n          ][0] &&\r\n        y ==\r\n          pathO[\r\n            pathO.length - stepback - 3 < 0 ? 0 : pathO.length - 3 - stepback\r\n          ][1]\r\n      ) {\r\n        return <button class=\"orange4\" codeX={x} codeY={y}></button>;\r\n      } else if (\r\n        x ==\r\n          pathO[\r\n            pathO.length - stepback - 4 < 0 ? 0 : pathO.length - 4 - stepback\r\n          ][0] &&\r\n        y ==\r\n          pathO[\r\n            pathO.length - stepback - 4 < 0 ? 0 : pathO.length - 4 - stepback\r\n          ][1]\r\n      ) {\r\n        return <button class=\"orange5\" codeX={x} codeY={y}></button>;\r\n      } else if (\r\n        x ==\r\n          pathO[\r\n            pathO.length - stepback - 5 < 0 ? 0 : pathO.length - 5 - stepback\r\n          ][0] &&\r\n        y ==\r\n          pathO[\r\n            pathO.length - stepback - 5 < 0 ? 0 : pathO.length - 5 - stepback\r\n          ][1]\r\n      ) {\r\n        return <button class=\"orange6\" codeX={x} codeY={y}></button>;\r\n      } else if (\r\n        x ==\r\n          pathO[\r\n            pathO.length - stepback - 6 < 0 ? 0 : pathO.length - 6 - stepback\r\n          ][0] &&\r\n        y ==\r\n          pathO[\r\n            pathO.length - stepback - 6 < 0 ? 0 : pathO.length - 6 - stepback\r\n          ][1]\r\n      ) {\r\n        return <button class=\"orange7\" codeX={x} codeY={y}></button>;\r\n      } else if (\r\n        x ==\r\n          pathO[\r\n            pathO.length - stepback - 7 < 0 ? 0 : pathO.length - 7 - stepback\r\n          ][0] &&\r\n        y ==\r\n          pathO[\r\n            pathO.length - stepback - 7 < 0 ? 0 : pathO.length - 7 - stepback\r\n          ][1]\r\n      ) {\r\n        return <button class=\"orange8\" codeX={x} codeY={y}></button>;\r\n      } else if (x == pathO[i][0] && y == pathO[i][1]) {\r\n        return <button class={bad} codeX={x} codeY={y}></button>;\r\n      }\r\n    }\r\n    return <button class={bid} codeX={x} codeY={y}></button>;\r\n  }\r\n\r\n  pathgeneratorOrigin() {\r\n    var interval = setInterval(this.pathgenerator.bind(this), 25);\r\n    this.setState({ interval: interval });\r\n  }\r\n\r\n  pathgenerator() {\r\n    var { pathO } = this.state;\r\n    const viewSize = this.props.sizeValue;\r\n    const sizeLimit = viewSize - 2;\r\n    var exwy = pathO;\r\n\r\n    function randomNumber(min, max) {\r\n      return Math.floor(Math.random() * (max - min)) + min;\r\n    }\r\n\r\n    function pastDirection(x1, x2, y1, y2) {\r\n      if (x1 == x2 && y1 > y2) {\r\n        return 1;\r\n        //up\r\n      } else if (x1 == x2 && y1 < y2) {\r\n        return 2;\r\n        //down\r\n      } else if (x1 > x2 && y1 == y2) {\r\n        return 3;\r\n        //left\r\n      } else if (x1 < x2 && y1 == y2) {\r\n        return 4;\r\n        //right\r\n      }\r\n    }\r\n\r\n    if (pathO.length == 1) {\r\n      var chooser = randomNumber(1, 3);\r\n\r\n      if (chooser == 1) {\r\n        exwy.push([1, 0], [2, 0]);\r\n      } else if (chooser == 2) {\r\n        exwy.push([0, 1], [0, 2]);\r\n      }\r\n    } else {\r\n      var potentialMove = [\r\n        [exwy[exwy.length - 1][0] + 2, exwy[exwy.length - 1][1]],\r\n        [exwy[exwy.length - 1][0] - 2, exwy[exwy.length - 1][1]],\r\n        [exwy[exwy.length - 1][0], exwy[exwy.length - 1][1] + 2],\r\n        [exwy[exwy.length - 1][0], exwy[exwy.length - 1][1] - 2],\r\n      ];\r\n\r\n      //these flags below mark whether the potential move exists in move array\r\n      var one = null;\r\n      var two = null;\r\n      var three = null;\r\n      var four = null;\r\n      //these flags below mark whether the potential move is on the board or off the board\r\n      var oneBoard = null;\r\n      var twoBoard = null;\r\n      var threeBoard = null;\r\n      var fourBoard = null;\r\n      var u = 0;\r\n      var i = 0;\r\n      var p = 0;\r\n      var k = 0;\r\n      for (u = 0; u < exwy.length; u++) {\r\n        if (\r\n          exwy[u][0] == potentialMove[0][0] &&\r\n          exwy[u][1] == potentialMove[0][1]\r\n        ) {\r\n          one = true;\r\n          break;\r\n        } else one = false;\r\n      }\r\n      for (i = 0; i < exwy.length; i++) {\r\n        if (\r\n          exwy[i][0] == potentialMove[1][0] &&\r\n          exwy[i][1] == potentialMove[1][1]\r\n        ) {\r\n          two = true;\r\n          break;\r\n        } else two = false;\r\n      }\r\n      for (p = 0; p < exwy.length; p++) {\r\n        if (\r\n          exwy[p][0] == potentialMove[2][0] &&\r\n          exwy[p][1] == potentialMove[2][1]\r\n        ) {\r\n          three = true;\r\n          break;\r\n        } else three = false;\r\n      }\r\n      for (k = 0; k < exwy.length; k++) {\r\n        if (\r\n          exwy[k][0] == potentialMove[3][0] &&\r\n          exwy[k][1] == potentialMove[3][1]\r\n        ) {\r\n          four = true;\r\n          break;\r\n        } else four = false;\r\n      }\r\n\r\n      if (\r\n        0 <= potentialMove[0][0] &&\r\n        potentialMove[0][0] <= sizeLimit &&\r\n        0 <= potentialMove[0][1] &&\r\n        potentialMove[0][1] <= sizeLimit\r\n      ) {\r\n        oneBoard = false;\r\n      } else oneBoard = true;\r\n\r\n      if (\r\n        0 <= potentialMove[1][0] &&\r\n        potentialMove[1][0] <= sizeLimit &&\r\n        0 <= potentialMove[1][1] &&\r\n        potentialMove[1][1] <= sizeLimit\r\n      ) {\r\n        twoBoard = false;\r\n      } else twoBoard = true;\r\n\r\n      if (\r\n        0 <= potentialMove[2][0] &&\r\n        potentialMove[2][0] <= sizeLimit &&\r\n        0 <= potentialMove[2][1] &&\r\n        potentialMove[2][1] <= sizeLimit\r\n      ) {\r\n        threeBoard = false;\r\n      } else threeBoard = true;\r\n\r\n      if (\r\n        0 <= potentialMove[3][0] &&\r\n        potentialMove[3][0] <= sizeLimit &&\r\n        0 <= potentialMove[3][1] &&\r\n        potentialMove[3][1] <= sizeLimit\r\n      ) {\r\n        fourBoard = false;\r\n      } else fourBoard = true;\r\n\r\n      var actualPotentialMoves = [];\r\n      if (one == false && oneBoard == false) {\r\n        actualPotentialMoves.push(potentialMove[0]);\r\n      }\r\n      if (two == false && twoBoard == false) {\r\n        actualPotentialMoves.push(potentialMove[1]);\r\n      }\r\n      if (three == false && threeBoard == false) {\r\n        actualPotentialMoves.push(potentialMove[2]);\r\n      }\r\n      if (four == false && fourBoard == false) {\r\n        actualPotentialMoves.push(potentialMove[3]);\r\n      }\r\n      //array of valid potential moves (unvisited and on the board) is logged below\r\n\r\n      if (actualPotentialMoves.length == 0) {\r\n        this.morePathFinders();\r\n      } else if (pathO.length !== 1) {\r\n        this.state.stepback = 3;\r\n\r\n        var chooserNext = randomNumber(1, actualPotentialMoves.length + 1);\r\n\r\n        var newDir = pastDirection(\r\n          exwy[exwy.length - 1][0],\r\n          actualPotentialMoves[chooserNext - 1][0],\r\n          exwy[exwy.length - 1][1],\r\n          actualPotentialMoves[chooserNext - 1][1]\r\n        );\r\n\r\n        if (newDir == 3) {\r\n          exwy.push(\r\n            [\r\n              actualPotentialMoves[chooserNext - 1][0] + 1,\r\n              actualPotentialMoves[chooserNext - 1][1],\r\n            ],\r\n            actualPotentialMoves[chooserNext - 1]\r\n          );\r\n        } else if (newDir == 4) {\r\n          exwy.push(\r\n            [\r\n              actualPotentialMoves[chooserNext - 1][0] - 1,\r\n              actualPotentialMoves[chooserNext - 1][1],\r\n            ],\r\n            actualPotentialMoves[chooserNext - 1]\r\n          );\r\n        } else if (newDir == 1) {\r\n          exwy.push(\r\n            [\r\n              actualPotentialMoves[chooserNext - 1][0],\r\n              actualPotentialMoves[chooserNext - 1][1] + 1,\r\n            ],\r\n            actualPotentialMoves[chooserNext - 1]\r\n          );\r\n        } else if (newDir == 2) {\r\n          exwy.push(\r\n            [\r\n              actualPotentialMoves[chooserNext - 1][0],\r\n              actualPotentialMoves[chooserNext - 1][1] - 1,\r\n            ],\r\n            actualPotentialMoves[chooserNext - 1]\r\n          );\r\n        }\r\n      }\r\n    }\r\n\r\n    this.setState((state) => {\r\n      return { pathO: exwy };\r\n    });\r\n    this.forceUpdate();\r\n  }\r\n\r\n  morePathFinders() {\r\n    var { pathO, stepback } = this.state;\r\n    const viewSize = this.props.sizeValue;\r\n    const sizeLimit = viewSize - 2;\r\n    var exwy = pathO;\r\n\r\n    function randomNumber(min, max) {\r\n      return Math.floor(Math.random() * (max - min)) + min;\r\n    }\r\n\r\n    var zcounter = stepback;\r\n    function pastAbsDirection(x1, x2, y1, y2) {\r\n      if (x1 == x2 && y1 > y2) {\r\n        return 1;\r\n        //up\r\n      } else if (x1 == x2 && y1 < y2) {\r\n        return 2;\r\n        //down\r\n      } else if (x1 > x2 && y1 == y2) {\r\n        return 3;\r\n        //left\r\n      } else if (x1 < x2 && y1 == y2) {\r\n        return 4;\r\n        //right\r\n      }\r\n    }\r\n\r\n    var potentialMove = [\r\n      [exwy[exwy.length - zcounter][0] + 2, exwy[exwy.length - zcounter][1]],\r\n      [exwy[exwy.length - zcounter][0] - 2, exwy[exwy.length - zcounter][1]],\r\n      [exwy[exwy.length - zcounter][0], exwy[exwy.length - zcounter][1] + 2],\r\n      [exwy[exwy.length - zcounter][0], exwy[exwy.length - zcounter][1] - 2],\r\n    ];\r\n\r\n    //these flags below mark whether the potential move exists in move array\r\n    var one = null;\r\n    var two = null;\r\n    var three = null;\r\n    var four = null;\r\n    //these below mark whether the potential move is on the board\r\n    var oneBoard = null;\r\n    var twoBoard = null;\r\n    var threeBoard = null;\r\n    var fourBoard = null;\r\n    var u = 0;\r\n    var i = 0;\r\n    var p = 0;\r\n    var k = 0;\r\n\r\n    for (u = 0; u < exwy.length; u++) {\r\n      if (\r\n        exwy[u][0] == potentialMove[0][0] &&\r\n        exwy[u][1] == potentialMove[0][1]\r\n      ) {\r\n        one = true;\r\n        break;\r\n      } else one = false;\r\n    }\r\n    for (i = 0; i < exwy.length; i++) {\r\n      if (\r\n        exwy[i][0] == potentialMove[1][0] &&\r\n        exwy[i][1] == potentialMove[1][1]\r\n      ) {\r\n        two = true;\r\n        break;\r\n      } else two = false;\r\n    }\r\n    for (p = 0; p < exwy.length; p++) {\r\n      if (\r\n        exwy[p][0] == potentialMove[2][0] &&\r\n        exwy[p][1] == potentialMove[2][1]\r\n      ) {\r\n        three = true;\r\n        break;\r\n      } else three = false;\r\n    }\r\n    for (k = 0; k < exwy.length; k++) {\r\n      if (\r\n        exwy[k][0] == potentialMove[3][0] &&\r\n        exwy[k][1] == potentialMove[3][1]\r\n      ) {\r\n        four = true;\r\n        break;\r\n      } else four = false;\r\n    }\r\n\r\n    if (\r\n      0 <= potentialMove[0][0] &&\r\n      potentialMove[0][0] <= sizeLimit &&\r\n      0 <= potentialMove[0][1] &&\r\n      potentialMove[0][1] <= sizeLimit\r\n    ) {\r\n      oneBoard = false;\r\n    } else oneBoard = true;\r\n\r\n    if (\r\n      0 <= potentialMove[1][0] &&\r\n      potentialMove[1][0] <= sizeLimit &&\r\n      0 <= potentialMove[1][1] &&\r\n      potentialMove[1][1] <= sizeLimit\r\n    ) {\r\n      twoBoard = false;\r\n    } else twoBoard = true;\r\n\r\n    if (\r\n      0 <= potentialMove[2][0] &&\r\n      potentialMove[2][0] <= sizeLimit &&\r\n      0 <= potentialMove[2][1] &&\r\n      potentialMove[2][1] <= sizeLimit\r\n    ) {\r\n      threeBoard = false;\r\n    } else threeBoard = true;\r\n\r\n    if (\r\n      0 <= potentialMove[3][0] &&\r\n      potentialMove[3][0] <= sizeLimit &&\r\n      0 <= potentialMove[3][1] &&\r\n      potentialMove[3][1] <= sizeLimit\r\n    ) {\r\n      fourBoard = false;\r\n    } else fourBoard = true;\r\n\r\n    var actualPotentialMoves = [];\r\n    if (one == false && oneBoard == false) {\r\n      actualPotentialMoves.push(potentialMove[0]);\r\n    }\r\n    if (two == false && twoBoard == false) {\r\n      actualPotentialMoves.push(potentialMove[1]);\r\n    }\r\n    if (three == false && threeBoard == false) {\r\n      actualPotentialMoves.push(potentialMove[2]);\r\n    }\r\n    if (four == false && fourBoard == false) {\r\n      actualPotentialMoves.push(potentialMove[3]);\r\n    }\r\n    //array of valid potential moves (unvisited and on the board) is logged below\r\n    //console.log(\"the actual Potential VALID moves are: \");\r\n    //console.log(actualPotentialMoves);\r\n\r\n    if (actualPotentialMoves.length == 0) {\r\n      //if length is zero here, then you know there is a 'dead end' in the maze\r\n    } else if (pathO.length !== 1) {\r\n      var chooserNext = randomNumber(1, actualPotentialMoves.length + 1);\r\n\r\n      //execution and use of a function that determines the direction of the last move\r\n      var newDir = pastAbsDirection(\r\n        exwy[exwy.length - zcounter][0],\r\n        actualPotentialMoves[chooserNext - 1][0],\r\n        exwy[exwy.length - zcounter][1],\r\n        actualPotentialMoves[chooserNext - 1][1]\r\n      );\r\n\r\n      //determine the new coordinates based on the direction (coded 1-4)\r\n\r\n      if (newDir == 3) {\r\n        exwy.push(\r\n          [\r\n            actualPotentialMoves[chooserNext - 1][0] + 1,\r\n            actualPotentialMoves[chooserNext - 1][1],\r\n          ],\r\n          actualPotentialMoves[chooserNext - 1]\r\n        );\r\n      } else if (newDir == 4) {\r\n        exwy.push(\r\n          [\r\n            actualPotentialMoves[chooserNext - 1][0] - 1,\r\n            actualPotentialMoves[chooserNext - 1][1],\r\n          ],\r\n          actualPotentialMoves[chooserNext - 1]\r\n        );\r\n      } else if (newDir == 1) {\r\n        exwy.push(\r\n          [\r\n            actualPotentialMoves[chooserNext - 1][0],\r\n            actualPotentialMoves[chooserNext - 1][1] + 1,\r\n          ],\r\n          actualPotentialMoves[chooserNext - 1]\r\n        );\r\n      } else if (newDir == 2) {\r\n        exwy.push(\r\n          [\r\n            actualPotentialMoves[chooserNext - 1][0],\r\n            actualPotentialMoves[chooserNext - 1][1] - 1,\r\n          ],\r\n          actualPotentialMoves[chooserNext - 1]\r\n        );\r\n      }\r\n    }\r\n    if (stepback < pathO.length) {\r\n      this.setState((state) => {\r\n        return { pathO: exwy, stepback: state.stepback + 2 };\r\n      });\r\n    } else {\r\n      //if the stepback becomes larger than the length of the 'move' array pathO\r\n      //then we know the maze is complete and we can end the interval\r\n      clearInterval(this.state.interval);\r\n      this.setState((state) => {\r\n        return { controltime: true };\r\n      });\r\n    }\r\n\r\n    this.forceUpdate();\r\n  }\r\n\r\n  upmove() {\r\n    var { icon, pathO } = this.state;\r\n    var u;\r\n\r\n    for (u = 0; u < pathO.length; u++) {\r\n      if (pathO[u][0] == icon[0] && pathO[u][1] == icon[1] - 1) {\r\n        this.setState((state) => {\r\n          return { icon: [icon[0], icon[1] - 2] };\r\n        });\r\n        break;\r\n      } else console.log(\"wall\");\r\n    }\r\n\r\n    console.log(\"up\");\r\n  }\r\n  downmove() {\r\n    var { icon, pathO } = this.state;\r\n    var u;\r\n\r\n    for (u = 0; u < pathO.length; u++) {\r\n      if (pathO[u][0] == icon[0] && pathO[u][1] == icon[1] + 1) {\r\n        this.setState((state) => {\r\n          return { icon: [icon[0], icon[1] + 2] };\r\n        });\r\n        break;\r\n      } else console.log(\"wall\");\r\n    }\r\n\r\n    console.log(\"up\");\r\n  }\r\n  rightmove() {\r\n    var { icon, pathO } = this.state;\r\n    var u;\r\n\r\n    for (u = 0; u < pathO.length; u++) {\r\n      if (pathO[u][0] == icon[0] + 1 && pathO[u][1] == icon[1]) {\r\n        this.setState((state) => {\r\n          return { icon: [icon[0] + 2, icon[1]] };\r\n        });\r\n        break;\r\n      } else console.log(\"wall\");\r\n    }\r\n\r\n    console.log(\"up\");\r\n  }\r\n  leftmove() {\r\n    var { icon, pathO } = this.state;\r\n    var u;\r\n\r\n    for (u = 0; u < pathO.length; u++) {\r\n      if (pathO[u][0] == icon[0] - 1 && pathO[u][1] == icon[1]) {\r\n        this.setState((state) => {\r\n          return { icon: [icon[0] - 2, icon[1]] };\r\n        });\r\n        break;\r\n      } else console.log(\"wall\");\r\n    }\r\n\r\n    console.log(\"up\");\r\n  }\r\n\r\n  nextExplanation() {\r\n    this.setState((state) => {\r\n      return { stepz: this.state.stepz + 1 };\r\n    });\r\n  }\r\n\r\n  skipExplanation() {\r\n    this.setState((state) => {\r\n      return { stepz: 5 };\r\n    });\r\n  }\r\n\r\n  previousExplanation() {\r\n    this.setState((state) => {\r\n      return { stepz: this.state.stepz - 1 };\r\n    });\r\n  }\r\n\r\n  renderControl(x, y) {\r\n    if (\r\n      (x == 0 && y == 0) |\r\n      (x == 2 && y == 0) |\r\n      (x == 0 && y == 2) |\r\n      (x == 2 && y == 2)\r\n    ) {\r\n      return <button class=\"bgrey\" codeX={x} codeY={y}></button>;\r\n    } else if (x == 1 && y == 0) {\r\n      return (\r\n        <button\r\n          class=\"bdirection\"\r\n          codeX={x}\r\n          codeY={y}\r\n          onClick={() => this.upmove()}\r\n        ></button>\r\n      );\r\n    } else if (x == 0 && y == 1) {\r\n      return (\r\n        <button\r\n          class=\"bdirection\"\r\n          codeX={x}\r\n          codeY={y}\r\n          onClick={() => this.leftmove()}\r\n        ></button>\r\n      );\r\n    } else if (x == 2 && y == 1) {\r\n      return (\r\n        <button\r\n          class=\"bdirection\"\r\n          codeX={x}\r\n          codeY={y}\r\n          onClick={() => this.rightmove()}\r\n        ></button>\r\n      );\r\n    } else if (x == 1 && y == 2) {\r\n      return (\r\n        <button\r\n          class=\"bdirection\"\r\n          codeX={x}\r\n          codeY={y}\r\n          onClick={() => this.downmove()}\r\n        ></button>\r\n      );\r\n    } else return <button class=\"bdirection\" codeX={x} codeY={y}></button>;\r\n  }\r\n\r\n  render() {\r\n    var { stepz, controltime } = this.state;\r\n    const elementS = [];\r\n    const elementZ = [];\r\n    const viewSize = this.props.sizeValue;\r\n\r\n    const aray = [];\r\n    const bray = [];\r\n    var a;\r\n    var b;\r\n    if (controltime == true) {\r\n      for (a = 0; a < 3; a++) {\r\n        for (b = 0; b < 3; b++) {\r\n          aray.push(<span>{this.renderControl(b, a)}</span>);\r\n        }\r\n        bray.push(\r\n          <div className=\"newLineC\">\r\n            {aray.map((value, index) => {\r\n              return <span key={index}>{value}</span>;\r\n            })}\r\n          </div>\r\n        );\r\n        for (b = 0; b < 9; b++) {\r\n          aray.pop();\r\n        }\r\n      }\r\n    }\r\n\r\n    //const sizeLimit = viewSize - 2;\r\n\r\n    var x;\r\n    var y;\r\n    for (y = 0; y < viewSize; y++) {\r\n      for (x = 0; x < viewSize; x++) {\r\n        elementS.push(<o>{this.renderSquare(x, y)}</o>);\r\n      }\r\n      elementZ.push(\r\n        <div className=\"newLine\">\r\n          {elementS.map((value, index) => {\r\n            return <span key={index}>{value}</span>;\r\n          })}\r\n        </div>\r\n      );\r\n      for (x = 0; x < viewSize; x++) {\r\n        elementS.pop();\r\n      }\r\n    }\r\n\r\n    const entireThingz = (\r\n      <div className=\"entireThing\">\r\n        <button id=\"largebutton\" onClick={() => this.pathgeneratorOrigin()}>\r\n          Click to Start\r\n        </button>\r\n\r\n        <div className=\"directionLand\">\r\n          {bray.map((value, index) => {\r\n            return <span key={index}>{value}</span>;\r\n          })}\r\n        </div>\r\n        <div id=\"mazeSpot\">\r\n          {elementZ.map((value, index) => {\r\n            return <span key={index}>{value}</span>;\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    const explanationZero = (\r\n      <div id=\"explanation\">\r\n        <div>\r\n          <p>\r\n            Welcome to my Maze Algorithm. I challenged myself to build an\r\n            algorithm that could build randomly generated mazes.\r\n          </p>\r\n          <p>This is how it works. </p>\r\n          My algorithm first examines four potential moves. It examines moving\r\n          up, down, left and right. It is looking for two things:\r\n          <li> Are each of these four potential moves are on the board?</li>\r\n          <li>Has this potential location of the board been visited before?</li>\r\n          Based on these two conditions the algorithm determines whether any of\r\n          these four moves are 'valid' and pushes them to an array.\r\n        </div>\r\n        <div>\r\n          <img src={thirdimg} alt=\"mystery\"></img>\r\n        </div>\r\n        <button id=\"largebutton\" onClick={() => this.nextExplanation()}>\r\n          Next\r\n        </button>\r\n        <button id=\"largebutton\" onClick={() => this.skipExplanation()}>\r\n          Skip\r\n        </button>\r\n      </div>\r\n    );\r\n\r\n    const explanationOne = (\r\n      <div id=\"explanation\">\r\n        <div>\r\n          My algorithm takes this new 'valid' move array and chooses a random\r\n          'valid' move to build a maze path to. I used a random number function\r\n          to accomplish this : \"Math.floor(Math.random() * (max - min)) + min\"\r\n          <p>\r\n            I created this function (below) to determine which direction the\r\n            path needs to be built so that the algorithm knows which coordinates\r\n            to pick for the next path.\r\n          </p>\r\n        </div>\r\n        <img src={secondimg} alt=\"mystery\"></img>\r\n        <button id=\"largebutton\" onClick={() => this.previousExplanation()}>\r\n          Previous\r\n        </button>\r\n        <button id=\"largebutton\" onClick={() => this.nextExplanation()}>\r\n          Next\r\n        </button>\r\n        <button id=\"largebutton\" onClick={() => this.skipExplanation()}>\r\n          Skip\r\n        </button>\r\n      </div>\r\n    );\r\n\r\n    const explanationTwo = (\r\n      <div id=\"explanation\">\r\n        <div>\r\n          Once a 'random' and 'valid' move is chosen, my algorithm 'moves' to\r\n          this new space on the maze, building the path and recording the move\r\n          into the 'move' array so that I do not visit it again.\r\n          <p>\r\n            When rendering the paths of the maze, my algorithm uses 'nested for\r\n            loops' and builds the entire grid using squares labeled with x and y\r\n            coordinates as shown below. Each iteration of the for loop pushes\r\n            the new square value to the array, and eventually pushes the entire\r\n            row of the array to the outer for loop so that every thing can be\r\n            displayed.\r\n          </p>\r\n          <img src={firstimg} alt=\"mystery\"></img>\r\n        </div>\r\n        <button id=\"largebutton\" onClick={() => this.previousExplanation()}>\r\n          Previous\r\n        </button>\r\n        <button id=\"largebutton\" onClick={() => this.nextExplanation()}>\r\n          Next\r\n        </button>\r\n        <button id=\"largebutton\" onClick={() => this.skipExplanation()}>\r\n          Skip\r\n        </button>\r\n      </div>\r\n    );\r\n\r\n    const explanationThree = (\r\n      <div id=\"explanation\">\r\n        <div>\r\n          <div>\r\n            My maze will innevitably and purposefully draw towards 'dead ends'\r\n            where it will be determined that there are zero valid moves\r\n            available. This is where the fun starts.\r\n            <p>\r\n              My algorithm uses a 'stepback' state variable and it will\r\n              'stepback' one space on the move array (step back on the current\r\n              maze path). Once it steps back one step, it again searches and\r\n              examines the four potential moves (up down left and right) to see\r\n              if there are any valid moves that it has missed.{\" \"}\r\n            </p>\r\n            <p>\r\n              If it finds another deadend at this new spot, the 'stepback' state\r\n              variable will increment one more step, and the algorithm will\r\n              repeat the process until it finds a valid move. Using this\r\n              strategy guarantees that the maze will draw paths on all areas of\r\n              the board, including the start and end position of the maze.\r\n            </p>\r\n            <p>\r\n              The structure I used is such that the 'origin' maze building\r\n              function is called at an interval, triggering my maze building\r\n              function 40 times per second. My 'pathgenerator' builds paths\r\n              until it reaches a deadend. My algorithm detects the deadend and\r\n              triggers my 'morepathfinder' function which utilizes the stepback\r\n              variable and does more searching from all of the stepback\r\n              locations until the maze is complete.\r\n            </p>\r\n            <img src={fourthimg} alt=\"mystery\"></img>\r\n          </div>\r\n        </div>\r\n        <button id=\"largebutton\" onClick={() => this.previousExplanation()}>\r\n          Previous\r\n        </button>\r\n        <button id=\"largebutton\" onClick={() => this.nextExplanation()}>\r\n          Next\r\n        </button>\r\n        <button id=\"largebutton\" onClick={() => this.skipExplanation()}>\r\n          Skip\r\n        </button>\r\n      </div>\r\n    );\r\n\r\n    const explanationFour = (\r\n      <div id=\"explanation\">\r\n        <div>\r\n          It is important to reset the stepback state variable each time it\r\n          reaches a new deadend. This way the stepback variable can be used to\r\n          trigger the end of my algorithm. My algorithm knows to stop searching\r\n          for maze paths once the stepback state variable increments to a value\r\n          that is larger than the length of the maze move array (the array that\r\n          tracks all the move paths).\r\n          <p>\r\n            Now you can continue \"Next\" to see my maze algorithm in action! In\r\n            real-time my maze algorithm will build you a uniquely randomized\r\n            maze just for you!\r\n          </p>\r\n        </div>\r\n        <button id=\"largebutton\" onClick={() => this.previousExplanation()}>\r\n          Previous\r\n        </button>\r\n        <button id=\"largebutton\" onClick={() => this.nextExplanation()}>\r\n          Next\r\n        </button>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div class=\"entireThing\">\r\n        <div className=\"wrapper\">\r\n          {stepz == 0 ? explanationZero : null}\r\n          {stepz == 1 ? explanationOne : null}\r\n          {stepz == 2 ? explanationTwo : null}\r\n          {stepz == 3 ? explanationThree : null}\r\n          {stepz == 4 ? explanationFour : null}\r\n          {stepz == 5 ? entireThingz : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      count: 20,\r\n    };\r\n  }\r\n  enterCount() {\r\n    var zvalue = document.getElementById(\"sizeHere\").value;\r\n\r\n    this.setState((state) => {\r\n      return { count: zvalue };\r\n    });\r\n  }\r\n\r\n  render() {\r\n    var { count } = this.state;\r\n\r\n    const inputBox = (\r\n      <div>\r\n        <form>\r\n          <input class=\"regbutton\" type=\"number\" id=\"sizeHere\"></input>\r\n          <button\r\n            type=\"button\"\r\n            class=\"regbutton\"\r\n            onClick={() => this.enterCount()}\r\n          >\r\n            ENTER\r\n          </button>\r\n          10 PRINT CHR$ (205.5 + RND (1)); : GOTO 10\r\n        </form>\r\n      </div>\r\n    );\r\n    return (\r\n      <div>\r\n        <Building sizeValue={count} />\r\n        <div className=\"HeaderSpot\">{inputBox}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\DDLACourse\\newprojects\\superMaze\\mazebuilder\\src\\reportWebVitals.js",[],{"ruleId":"232","replacedBy":"233"},{"ruleId":"234","replacedBy":"235"},{"ruleId":"236","severity":1,"message":"237","line":22,"column":19,"nodeType":"238","messageId":"239","endLine":22,"endColumn":21},{"ruleId":"232","replacedBy":"240"},{"ruleId":"234","replacedBy":"241"},{"ruleId":"242","severity":1,"message":"243","line":7,"column":9,"nodeType":"244","messageId":"245","endLine":7,"endColumn":18},{"ruleId":"242","severity":1,"message":"246","line":18,"column":14,"nodeType":"244","messageId":"245","endLine":18,"endColumn":21},{"ruleId":"242","severity":1,"message":"247","line":24,"column":9,"nodeType":"244","messageId":"245","endLine":24,"endColumn":10},{"ruleId":"236","severity":1,"message":"237","line":31,"column":13,"nodeType":"238","messageId":"239","endLine":31,"endColumn":15},{"ruleId":"236","severity":1,"message":"237","line":31,"column":23,"nodeType":"238","messageId":"239","endLine":31,"endColumn":25},{"ruleId":"236","severity":1,"message":"237","line":33,"column":20,"nodeType":"238","messageId":"239","endLine":33,"endColumn":22},{"ruleId":"236","severity":1,"message":"237","line":33,"column":41,"nodeType":"238","messageId":"239","endLine":33,"endColumn":43},{"ruleId":"236","severity":1,"message":"237","line":36,"column":11,"nodeType":"238","messageId":"239","endLine":36,"endColumn":13},{"ruleId":"236","severity":1,"message":"237","line":37,"column":11,"nodeType":"238","messageId":"239","endLine":37,"endColumn":13},{"ruleId":"236","severity":1,"message":"237","line":41,"column":11,"nodeType":"238","messageId":"239","endLine":41,"endColumn":13},{"ruleId":"236","severity":1,"message":"237","line":43,"column":11,"nodeType":"238","messageId":"239","endLine":43,"endColumn":13},{"ruleId":"236","severity":1,"message":"237","line":46,"column":20,"nodeType":"238","messageId":"239","endLine":46,"endColumn":22},{"ruleId":"236","severity":1,"message":"237","line":46,"column":40,"nodeType":"238","messageId":"239","endLine":46,"endColumn":42},{"ruleId":"236","severity":1,"message":"237","line":65,"column":14,"nodeType":"238","messageId":"239","endLine":65,"endColumn":16},{"ruleId":"236","severity":1,"message":"237","line":68,"column":21,"nodeType":"238","messageId":"239","endLine":68,"endColumn":23},{"ruleId":"236","severity":1,"message":"237","line":71,"column":32,"nodeType":"238","messageId":"239","endLine":71,"endColumn":34},{"ruleId":"236","severity":1,"message":"237","line":74,"column":32,"nodeType":"238","messageId":"239","endLine":74,"endColumn":34},{"ruleId":"236","severity":1,"message":"237","line":104,"column":20,"nodeType":"238","messageId":"239","endLine":104,"endColumn":22},{"ruleId":"236","severity":1,"message":"237","line":105,"column":20,"nodeType":"238","messageId":"239","endLine":105,"endColumn":22},{"ruleId":"236","severity":1,"message":"237","line":113,"column":20,"nodeType":"238","messageId":"239","endLine":113,"endColumn":22},{"ruleId":"236","severity":1,"message":"237","line":114,"column":20,"nodeType":"238","messageId":"239","endLine":114,"endColumn":22},{"ruleId":"236","severity":1,"message":"237","line":122,"column":20,"nodeType":"238","messageId":"239","endLine":122,"endColumn":22},{"ruleId":"236","severity":1,"message":"237","line":123,"column":20,"nodeType":"238","messageId":"239","endLine":123,"endColumn":22},{"ruleId":"236","severity":1,"message":"237","line":131,"column":20,"nodeType":"238","messageId":"239","endLine":131,"endColumn":22},{"ruleId":"236","severity":1,"message":"237","line":132,"column":20,"nodeType":"238","messageId":"239","endLine":132,"endColumn":22},{"ruleId":"236","severity":1,"message":"237","line":176,"column":13,"nodeType":"238","messageId":"239","endLine":176,"endColumn":15},{"ruleId":"236","severity":1,"message":"237","line":176,"column":34,"nodeType":"238","messageId":"239","endLine":176,"endColumn":36},{"ruleId":"236","severity":1,"message":"237","line":179,"column":13,"nodeType":"238","messageId":"239","endLine":179,"endColumn":15},{"ruleId":"236","severity":1,"message":"237","line":179,"column":34,"nodeType":"238","messageId":"239","endLine":179,"endColumn":36},{"ruleId":"236","severity":1,"message":"237","line":182,"column":15,"nodeType":"238","messageId":"239","endLine":182,"endColumn":17},{"ruleId":"236","severity":1,"message":"237","line":182,"column":38,"nodeType":"238","messageId":"239","endLine":182,"endColumn":40},{"ruleId":"236","severity":1,"message":"237","line":185,"column":14,"nodeType":"238","messageId":"239","endLine":185,"endColumn":16},{"ruleId":"236","severity":1,"message":"237","line":185,"column":36,"nodeType":"238","messageId":"239","endLine":185,"endColumn":38},{"ruleId":"236","severity":1,"message":"237","line":192,"column":37,"nodeType":"238","messageId":"239","endLine":192,"endColumn":39},{"ruleId":"236","severity":1,"message":"237","line":207,"column":18,"nodeType":"238","messageId":"239","endLine":207,"endColumn":20},{"ruleId":"236","severity":1,"message":"237","line":215,"column":25,"nodeType":"238","messageId":"239","endLine":215,"endColumn":27},{"ruleId":"236","severity":1,"message":"237","line":223,"column":25,"nodeType":"238","messageId":"239","endLine":223,"endColumn":27},{"ruleId":"236","severity":1,"message":"237","line":231,"column":25,"nodeType":"238","messageId":"239","endLine":231,"endColumn":27},{"ruleId":"236","severity":1,"message":"237","line":269,"column":22,"nodeType":"238","messageId":"239","endLine":269,"endColumn":24},{"ruleId":"236","severity":1,"message":"237","line":272,"column":19,"nodeType":"238","messageId":"239","endLine":272,"endColumn":21},{"ruleId":"236","severity":1,"message":"237","line":274,"column":26,"nodeType":"238","messageId":"239","endLine":274,"endColumn":28},{"ruleId":"236","severity":1,"message":"237","line":279,"column":16,"nodeType":"238","messageId":"239","endLine":279,"endColumn":18},{"ruleId":"236","severity":1,"message":"237","line":282,"column":23,"nodeType":"238","messageId":"239","endLine":282,"endColumn":25},{"ruleId":"236","severity":1,"message":"237","line":285,"column":34,"nodeType":"238","messageId":"239","endLine":285,"endColumn":36},{"ruleId":"236","severity":1,"message":"237","line":288,"column":34,"nodeType":"238","messageId":"239","endLine":288,"endColumn":36},{"ruleId":"236","severity":1,"message":"237","line":317,"column":22,"nodeType":"238","messageId":"239","endLine":317,"endColumn":24},{"ruleId":"236","severity":1,"message":"237","line":318,"column":22,"nodeType":"238","messageId":"239","endLine":318,"endColumn":24},{"ruleId":"236","severity":1,"message":"237","line":326,"column":22,"nodeType":"238","messageId":"239","endLine":326,"endColumn":24},{"ruleId":"236","severity":1,"message":"237","line":327,"column":22,"nodeType":"238","messageId":"239","endLine":327,"endColumn":24},{"ruleId":"236","severity":1,"message":"237","line":335,"column":22,"nodeType":"238","messageId":"239","endLine":335,"endColumn":24},{"ruleId":"236","severity":1,"message":"237","line":336,"column":22,"nodeType":"238","messageId":"239","endLine":336,"endColumn":24},{"ruleId":"236","severity":1,"message":"237","line":344,"column":22,"nodeType":"238","messageId":"239","endLine":344,"endColumn":24},{"ruleId":"236","severity":1,"message":"237","line":345,"column":22,"nodeType":"238","messageId":"239","endLine":345,"endColumn":24},{"ruleId":"236","severity":1,"message":"237","line":389,"column":15,"nodeType":"238","messageId":"239","endLine":389,"endColumn":17},{"ruleId":"236","severity":1,"message":"237","line":389,"column":36,"nodeType":"238","messageId":"239","endLine":389,"endColumn":38},{"ruleId":"236","severity":1,"message":"237","line":392,"column":15,"nodeType":"238","messageId":"239","endLine":392,"endColumn":17},{"ruleId":"236","severity":1,"message":"237","line":392,"column":36,"nodeType":"238","messageId":"239","endLine":392,"endColumn":38},{"ruleId":"236","severity":1,"message":"237","line":395,"column":17,"nodeType":"238","messageId":"239","endLine":395,"endColumn":19},{"ruleId":"236","severity":1,"message":"237","line":395,"column":40,"nodeType":"238","messageId":"239","endLine":395,"endColumn":42},{"ruleId":"236","severity":1,"message":"237","line":398,"column":16,"nodeType":"238","messageId":"239","endLine":398,"endColumn":18},{"ruleId":"236","severity":1,"message":"237","line":398,"column":38,"nodeType":"238","messageId":"239","endLine":398,"endColumn":40},{"ruleId":"236","severity":1,"message":"237","line":403,"column":39,"nodeType":"238","messageId":"239","endLine":403,"endColumn":41},{"ruleId":"248","severity":1,"message":"249","line":406,"column":9,"nodeType":"250","endLine":406,"endColumn":19},{"ruleId":"236","severity":1,"message":"237","line":417,"column":20,"nodeType":"238","messageId":"239","endLine":417,"endColumn":22},{"ruleId":"236","severity":1,"message":"237","line":425,"column":27,"nodeType":"238","messageId":"239","endLine":425,"endColumn":29},{"ruleId":"236","severity":1,"message":"237","line":433,"column":27,"nodeType":"238","messageId":"239","endLine":433,"endColumn":29},{"ruleId":"236","severity":1,"message":"237","line":441,"column":27,"nodeType":"238","messageId":"239","endLine":441,"endColumn":29},{"ruleId":"232","replacedBy":"251"},{"ruleId":"234","replacedBy":"252"},{"ruleId":"242","severity":1,"message":"253","line":58,"column":14,"nodeType":"244","messageId":"245","endLine":58,"endColumn":26},{"ruleId":"236","severity":1,"message":"237","line":67,"column":20,"nodeType":"238","messageId":"239","endLine":67,"endColumn":22},{"ruleId":"236","severity":1,"message":"237","line":67,"column":41,"nodeType":"238","messageId":"239","endLine":67,"endColumn":43},{"ruleId":"236","severity":1,"message":"237","line":67,"column":57,"nodeType":"238","messageId":"239","endLine":67,"endColumn":59},{"ruleId":"236","severity":1,"message":"237","line":69,"column":20,"nodeType":"238","messageId":"239","endLine":69,"endColumn":22},{"ruleId":"236","severity":1,"message":"237","line":69,"column":30,"nodeType":"238","messageId":"239","endLine":69,"endColumn":32},{"ruleId":"236","severity":1,"message":"237","line":71,"column":20,"nodeType":"238","messageId":"239","endLine":71,"endColumn":22},{"ruleId":"236","severity":1,"message":"237","line":71,"column":41,"nodeType":"238","messageId":"239","endLine":71,"endColumn":43},{"ruleId":"236","severity":1,"message":"237","line":74,"column":11,"nodeType":"238","messageId":"239","endLine":74,"endColumn":13},{"ruleId":"236","severity":1,"message":"237","line":75,"column":11,"nodeType":"238","messageId":"239","endLine":75,"endColumn":13},{"ruleId":"236","severity":1,"message":"237","line":80,"column":11,"nodeType":"238","messageId":"239","endLine":80,"endColumn":13},{"ruleId":"236","severity":1,"message":"237","line":82,"column":11,"nodeType":"238","messageId":"239","endLine":82,"endColumn":13},{"ruleId":"236","severity":1,"message":"237","line":86,"column":11,"nodeType":"238","messageId":"239","endLine":86,"endColumn":13},{"ruleId":"236","severity":1,"message":"237","line":90,"column":11,"nodeType":"238","messageId":"239","endLine":90,"endColumn":13},{"ruleId":"236","severity":1,"message":"237","line":97,"column":11,"nodeType":"238","messageId":"239","endLine":97,"endColumn":13},{"ruleId":"236","severity":1,"message":"237","line":101,"column":11,"nodeType":"238","messageId":"239","endLine":101,"endColumn":13},{"ruleId":"236","severity":1,"message":"237","line":108,"column":11,"nodeType":"238","messageId":"239","endLine":108,"endColumn":13},{"ruleId":"236","severity":1,"message":"237","line":112,"column":11,"nodeType":"238","messageId":"239","endLine":112,"endColumn":13},{"ruleId":"236","severity":1,"message":"237","line":119,"column":11,"nodeType":"238","messageId":"239","endLine":119,"endColumn":13},{"ruleId":"236","severity":1,"message":"237","line":123,"column":11,"nodeType":"238","messageId":"239","endLine":123,"endColumn":13},{"ruleId":"236","severity":1,"message":"237","line":130,"column":11,"nodeType":"238","messageId":"239","endLine":130,"endColumn":13},{"ruleId":"236","severity":1,"message":"237","line":134,"column":11,"nodeType":"238","messageId":"239","endLine":134,"endColumn":13},{"ruleId":"236","severity":1,"message":"237","line":141,"column":11,"nodeType":"238","messageId":"239","endLine":141,"endColumn":13},{"ruleId":"236","severity":1,"message":"237","line":145,"column":11,"nodeType":"238","messageId":"239","endLine":145,"endColumn":13},{"ruleId":"236","severity":1,"message":"237","line":152,"column":11,"nodeType":"238","messageId":"239","endLine":152,"endColumn":13},{"ruleId":"236","severity":1,"message":"237","line":156,"column":11,"nodeType":"238","messageId":"239","endLine":156,"endColumn":13},{"ruleId":"236","severity":1,"message":"237","line":162,"column":20,"nodeType":"238","messageId":"239","endLine":162,"endColumn":22},{"ruleId":"236","severity":1,"message":"237","line":162,"column":40,"nodeType":"238","messageId":"239","endLine":162,"endColumn":42},{"ruleId":"236","severity":1,"message":"237","line":185,"column":14,"nodeType":"238","messageId":"239","endLine":185,"endColumn":16},{"ruleId":"236","severity":1,"message":"237","line":188,"column":21,"nodeType":"238","messageId":"239","endLine":188,"endColumn":23},{"ruleId":"236","severity":1,"message":"237","line":191,"column":32,"nodeType":"238","messageId":"239","endLine":191,"endColumn":34},{"ruleId":"236","severity":1,"message":"237","line":194,"column":32,"nodeType":"238","messageId":"239","endLine":194,"endColumn":34},{"ruleId":"236","severity":1,"message":"237","line":200,"column":22,"nodeType":"238","messageId":"239","endLine":200,"endColumn":24},{"ruleId":"236","severity":1,"message":"237","line":203,"column":19,"nodeType":"238","messageId":"239","endLine":203,"endColumn":21},{"ruleId":"236","severity":1,"message":"237","line":205,"column":26,"nodeType":"238","messageId":"239","endLine":205,"endColumn":28},{"ruleId":"236","severity":1,"message":"237","line":232,"column":22,"nodeType":"238","messageId":"239","endLine":232,"endColumn":24},{"ruleId":"236","severity":1,"message":"237","line":233,"column":22,"nodeType":"238","messageId":"239","endLine":233,"endColumn":24},{"ruleId":"236","severity":1,"message":"237","line":241,"column":22,"nodeType":"238","messageId":"239","endLine":241,"endColumn":24},{"ruleId":"236","severity":1,"message":"237","line":242,"column":22,"nodeType":"238","messageId":"239","endLine":242,"endColumn":24},{"ruleId":"236","severity":1,"message":"237","line":250,"column":22,"nodeType":"238","messageId":"239","endLine":250,"endColumn":24},{"ruleId":"236","severity":1,"message":"237","line":251,"column":22,"nodeType":"238","messageId":"239","endLine":251,"endColumn":24},{"ruleId":"236","severity":1,"message":"237","line":259,"column":22,"nodeType":"238","messageId":"239","endLine":259,"endColumn":24},{"ruleId":"236","severity":1,"message":"237","line":260,"column":22,"nodeType":"238","messageId":"239","endLine":260,"endColumn":24},{"ruleId":"236","severity":1,"message":"237","line":304,"column":15,"nodeType":"238","messageId":"239","endLine":304,"endColumn":17},{"ruleId":"236","severity":1,"message":"237","line":304,"column":36,"nodeType":"238","messageId":"239","endLine":304,"endColumn":38},{"ruleId":"236","severity":1,"message":"237","line":307,"column":15,"nodeType":"238","messageId":"239","endLine":307,"endColumn":17},{"ruleId":"236","severity":1,"message":"237","line":307,"column":36,"nodeType":"238","messageId":"239","endLine":307,"endColumn":38},{"ruleId":"236","severity":1,"message":"237","line":310,"column":17,"nodeType":"238","messageId":"239","endLine":310,"endColumn":19},{"ruleId":"236","severity":1,"message":"237","line":310,"column":40,"nodeType":"238","messageId":"239","endLine":310,"endColumn":42},{"ruleId":"236","severity":1,"message":"237","line":313,"column":16,"nodeType":"238","messageId":"239","endLine":313,"endColumn":18},{"ruleId":"236","severity":1,"message":"237","line":313,"column":38,"nodeType":"238","messageId":"239","endLine":313,"endColumn":40},{"ruleId":"236","severity":1,"message":"237","line":318,"column":39,"nodeType":"238","messageId":"239","endLine":318,"endColumn":41},{"ruleId":"248","severity":1,"message":"249","line":321,"column":9,"nodeType":"250","endLine":321,"endColumn":19},{"ruleId":"236","severity":1,"message":"237","line":332,"column":20,"nodeType":"238","messageId":"239","endLine":332,"endColumn":22},{"ruleId":"236","severity":1,"message":"237","line":340,"column":27,"nodeType":"238","messageId":"239","endLine":340,"endColumn":29},{"ruleId":"236","severity":1,"message":"237","line":348,"column":27,"nodeType":"238","messageId":"239","endLine":348,"endColumn":29},{"ruleId":"236","severity":1,"message":"237","line":356,"column":27,"nodeType":"238","messageId":"239","endLine":356,"endColumn":29},{"ruleId":"236","severity":1,"message":"237","line":386,"column":14,"nodeType":"238","messageId":"239","endLine":386,"endColumn":16},{"ruleId":"236","severity":1,"message":"237","line":389,"column":21,"nodeType":"238","messageId":"239","endLine":389,"endColumn":23},{"ruleId":"236","severity":1,"message":"237","line":392,"column":32,"nodeType":"238","messageId":"239","endLine":392,"endColumn":34},{"ruleId":"236","severity":1,"message":"237","line":395,"column":32,"nodeType":"238","messageId":"239","endLine":395,"endColumn":34},{"ruleId":"236","severity":1,"message":"237","line":425,"column":20,"nodeType":"238","messageId":"239","endLine":425,"endColumn":22},{"ruleId":"236","severity":1,"message":"237","line":426,"column":20,"nodeType":"238","messageId":"239","endLine":426,"endColumn":22},{"ruleId":"236","severity":1,"message":"237","line":434,"column":20,"nodeType":"238","messageId":"239","endLine":434,"endColumn":22},{"ruleId":"236","severity":1,"message":"237","line":435,"column":20,"nodeType":"238","messageId":"239","endLine":435,"endColumn":22},{"ruleId":"236","severity":1,"message":"237","line":443,"column":20,"nodeType":"238","messageId":"239","endLine":443,"endColumn":22},{"ruleId":"236","severity":1,"message":"237","line":444,"column":20,"nodeType":"238","messageId":"239","endLine":444,"endColumn":22},{"ruleId":"236","severity":1,"message":"237","line":452,"column":20,"nodeType":"238","messageId":"239","endLine":452,"endColumn":22},{"ruleId":"236","severity":1,"message":"237","line":453,"column":20,"nodeType":"238","messageId":"239","endLine":453,"endColumn":22},{"ruleId":"236","severity":1,"message":"237","line":497,"column":13,"nodeType":"238","messageId":"239","endLine":497,"endColumn":15},{"ruleId":"236","severity":1,"message":"237","line":497,"column":34,"nodeType":"238","messageId":"239","endLine":497,"endColumn":36},{"ruleId":"236","severity":1,"message":"237","line":500,"column":13,"nodeType":"238","messageId":"239","endLine":500,"endColumn":15},{"ruleId":"236","severity":1,"message":"237","line":500,"column":34,"nodeType":"238","messageId":"239","endLine":500,"endColumn":36},{"ruleId":"236","severity":1,"message":"237","line":503,"column":15,"nodeType":"238","messageId":"239","endLine":503,"endColumn":17},{"ruleId":"236","severity":1,"message":"237","line":503,"column":38,"nodeType":"238","messageId":"239","endLine":503,"endColumn":40},{"ruleId":"236","severity":1,"message":"237","line":506,"column":14,"nodeType":"238","messageId":"239","endLine":506,"endColumn":16},{"ruleId":"236","severity":1,"message":"237","line":506,"column":36,"nodeType":"238","messageId":"239","endLine":506,"endColumn":38},{"ruleId":"236","severity":1,"message":"237","line":513,"column":37,"nodeType":"238","messageId":"239","endLine":513,"endColumn":39},{"ruleId":"236","severity":1,"message":"237","line":528,"column":18,"nodeType":"238","messageId":"239","endLine":528,"endColumn":20},{"ruleId":"236","severity":1,"message":"237","line":536,"column":25,"nodeType":"238","messageId":"239","endLine":536,"endColumn":27},{"ruleId":"236","severity":1,"message":"237","line":544,"column":25,"nodeType":"238","messageId":"239","endLine":544,"endColumn":27},{"ruleId":"236","severity":1,"message":"237","line":552,"column":25,"nodeType":"238","messageId":"239","endLine":552,"endColumn":27},{"ruleId":"236","severity":1,"message":"237","line":583,"column":23,"nodeType":"238","messageId":"239","endLine":583,"endColumn":25},{"ruleId":"236","severity":1,"message":"237","line":583,"column":49,"nodeType":"238","messageId":"239","endLine":583,"endColumn":51},{"ruleId":"236","severity":1,"message":"237","line":598,"column":23,"nodeType":"238","messageId":"239","endLine":598,"endColumn":25},{"ruleId":"236","severity":1,"message":"237","line":598,"column":49,"nodeType":"238","messageId":"239","endLine":598,"endColumn":51},{"ruleId":"236","severity":1,"message":"237","line":613,"column":23,"nodeType":"238","messageId":"239","endLine":613,"endColumn":25},{"ruleId":"236","severity":1,"message":"237","line":613,"column":53,"nodeType":"238","messageId":"239","endLine":613,"endColumn":55},{"ruleId":"236","severity":1,"message":"237","line":628,"column":23,"nodeType":"238","messageId":"239","endLine":628,"endColumn":25},{"ruleId":"236","severity":1,"message":"237","line":628,"column":53,"nodeType":"238","messageId":"239","endLine":628,"endColumn":55},{"ruleId":"236","severity":1,"message":"237","line":659,"column":10,"nodeType":"238","messageId":"239","endLine":659,"endColumn":12},{"ruleId":"236","severity":1,"message":"237","line":659,"column":20,"nodeType":"238","messageId":"239","endLine":659,"endColumn":22},{"ruleId":"236","severity":1,"message":"237","line":660,"column":10,"nodeType":"238","messageId":"239","endLine":660,"endColumn":12},{"ruleId":"236","severity":1,"message":"237","line":660,"column":20,"nodeType":"238","messageId":"239","endLine":660,"endColumn":22},{"ruleId":"236","severity":1,"message":"237","line":661,"column":10,"nodeType":"238","messageId":"239","endLine":661,"endColumn":12},{"ruleId":"236","severity":1,"message":"237","line":661,"column":20,"nodeType":"238","messageId":"239","endLine":661,"endColumn":22},{"ruleId":"236","severity":1,"message":"237","line":662,"column":10,"nodeType":"238","messageId":"239","endLine":662,"endColumn":12},{"ruleId":"236","severity":1,"message":"237","line":662,"column":20,"nodeType":"238","messageId":"239","endLine":662,"endColumn":22},{"ruleId":"236","severity":1,"message":"237","line":665,"column":18,"nodeType":"238","messageId":"239","endLine":665,"endColumn":20},{"ruleId":"236","severity":1,"message":"237","line":665,"column":28,"nodeType":"238","messageId":"239","endLine":665,"endColumn":30},{"ruleId":"236","severity":1,"message":"237","line":674,"column":18,"nodeType":"238","messageId":"239","endLine":674,"endColumn":20},{"ruleId":"236","severity":1,"message":"237","line":674,"column":28,"nodeType":"238","messageId":"239","endLine":674,"endColumn":30},{"ruleId":"236","severity":1,"message":"237","line":683,"column":18,"nodeType":"238","messageId":"239","endLine":683,"endColumn":20},{"ruleId":"236","severity":1,"message":"237","line":683,"column":28,"nodeType":"238","messageId":"239","endLine":683,"endColumn":30},{"ruleId":"236","severity":1,"message":"237","line":692,"column":18,"nodeType":"238","messageId":"239","endLine":692,"endColumn":20},{"ruleId":"236","severity":1,"message":"237","line":692,"column":28,"nodeType":"238","messageId":"239","endLine":692,"endColumn":30},{"ruleId":"236","severity":1,"message":"237","line":714,"column":21,"nodeType":"238","messageId":"239","endLine":714,"endColumn":23},{"ruleId":"236","severity":1,"message":"237","line":923,"column":18,"nodeType":"238","messageId":"239","endLine":923,"endColumn":20},{"ruleId":"236","severity":1,"message":"237","line":924,"column":18,"nodeType":"238","messageId":"239","endLine":924,"endColumn":20},{"ruleId":"236","severity":1,"message":"237","line":925,"column":18,"nodeType":"238","messageId":"239","endLine":925,"endColumn":20},{"ruleId":"236","severity":1,"message":"237","line":926,"column":18,"nodeType":"238","messageId":"239","endLine":926,"endColumn":20},{"ruleId":"236","severity":1,"message":"237","line":927,"column":18,"nodeType":"238","messageId":"239","endLine":927,"endColumn":20},{"ruleId":"236","severity":1,"message":"237","line":928,"column":18,"nodeType":"238","messageId":"239","endLine":928,"endColumn":20},"no-native-reassign",["254"],"no-negated-in-lhs",["255"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["254"],["255"],"no-unused-vars","'superpath' is assigned a value but never used.","Identifier","unusedVar","'shuffle' is defined but never used.","'z' is assigned a value but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression",["254"],["255"],"'randomNumber' is defined but never used.","no-global-assign","no-unsafe-negation"]